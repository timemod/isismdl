Terminals unused in grammar

   "^="


State 94 conflicts: 1 shift/reduce


Grammar

    0 $accept: model $end

    1 model: stmtlist opt_end

    2 opt_end: /* empty */
    3        | "end" ';'

    4 stmtlist: stmt
    5         | stmtlist stmt

    6 stmt: "function" fstmt
    7     | "ul function" ulfstmt
    8     | "param" plist ';'
    9     | eqtyp lhsexpl '=' expr ';'
   10     | eqtyp lhsimpl '=' expr ';'
   11     | eqtyp eqname lhsexpl '=' expr ';'
   12     | eqtyp eqname lhsimpl '=' expr ';'
   13     | ';'
   14     | error ';'

   15 eqtyp: "frml"
   16      | "ident"
   17      | eqtyp_error

   18 eqtyp_error: "name"
   19            | keywd
   20            | "user function"
   21            | "user language function"

   22 eqname: "name"
   23       | keywd
   24       | "user function"
   25       | "user language function"

   26 keywd: "builtin function"
   27      | "sum"
   28      | "del"
   29      | "if"
   30      | "else"
   31      | "elseif"
   32      | "then"

   33 plist: pnlist
   34      | plist pnlist

   35 pnlist: pname nlist

   36 pname: "name"

   37 nlist: snumber
   38      | nlist snumber

   39 snumber: opt_sign "number"
   40        | sinteger

   41 sinteger: opt_sign "integer"

   42 lhsexpl: "name"
   43        | "user function"
   44        | "user language function"
   45        | keywd

   46 lhsimpl: "integer" '(' "name" ')'
   47        | "integer" '(' "user function" ')'
   48        | "integer" '(' "user language function" ')'

   49 funcname: "name"
   50         | "user function"
   51         | "user language function"

   52 $@1: /* empty */

   53 fstmt: funcname $@1 '(' formals ')' '=' expr

   54 $@2: /* empty */

   55 ulfstmt: funcname $@2 '(' formals ')'

   56 formals: "name"
   57        | formals ',' "name"

   58 sexpr: "number"
   59      | "integer"
   60      | "builtin function" '(' fargs ')'
   61      | "user function" '(' ufargs ')'
   62      | "user language function" '(' ufargs ')'
   63      | "del" '(' delarg ':' expr ')'
   64      | "sum" '(' sumarg ':' expr ')'
   65      | ifexpr
   66      | ifexpr "endif"
   67      | rexpr

   68 expr: sexpr
   69     | var

   70 ifexpr: ifpart1 "else" expr

   71 ifpart1: ifthen
   72        | ifthen elseifl

   73 ifthen: "if" expr "then" expr

   74 elseif: "elseif" expr "then" expr

   75 elseifl: elseif
   76        | elseifl elseif

   77 delarg: "integer"

   78 sumarg: "name" '=' sinteger ',' sinteger

   79 rexpr: '(' expr ')'
   80      | expr '+' expr
   81      | expr '-' expr
   82      | expr '*' expr
   83      | expr '/' expr
   84      | expr T_POW expr
   85      | '-' expr
   86      | '+' expr
   87      | lexpr

   88 lexpr: expr ">" expr
   89      | expr ">=" expr
   90      | expr "<" expr
   91      | expr "<=" expr
   92      | expr '=' expr
   93      | expr ".eq." expr
   94      | expr T_NE expr
   95      | expr "& or .and." expr
   96      | expr "| or .or." expr
   97      | "^ or .not." expr
   98      | '^' expr

   99 fargs: expr
  100      | fargs ',' expr

  101 ufargs: ufarg
  102       | ufargs ',' ufarg

  103 ufarg: sexpr
  104      | var

  105 var: "name"
  106    | "name" '[' sinteger ']'
  107    | "name" '[' "name" ']'
  108    | "name" '[' "name" '-' "integer" ']'
  109    | "name" '[' "name" '+' "integer" ']'
  110    | "name" '(' sinteger ')'
  111    | "name" '(' "name" ')'
  112    | "name" '(' "name" '-' "integer" ')'
  113    | "name" '(' "name" '+' "integer" ')'

  114 opt_sign: /* empty */
  115         | '-'
  116         | '+'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 46 47 48 53 55 60 61 62 63 64 79 110 111 112 113
')' (41) 46 47 48 53 55 60 61 62 63 64 79 110 111 112 113
'*' (42) 82
'+' (43) 80 86 109 113 116
',' (44) 57 78 100 102
'-' (45) 81 85 108 112 115
'/' (47) 83
':' (58) 63 64
';' (59) 3 8 9 10 11 12 13 14
'=' (61) 9 10 11 12 53 78 92
'[' (91) 106 107 108 109
']' (93) 106 107 108 109
'^' (94) 98
error (256) 14
"end" (258) 3
"function" (259) 6
"ul function" (260) 7
"frml" (261) 15
"ident" (262) 16
"param" (263) 8
"name" (264) 18 22 36 42 46 49 56 57 78 105 106 107 108 109 110 111
    112 113
"user function" (265) 20 24 43 47 50 61
"user language function" (266) 21 25 44 48 51 62
"if" (267) 29 73
"then" (268) 32 73 74
"else" (269) 30 70
"elseif" (270) 31 74
"endif" (271) 66
"sum" (272) 27 64
"del" (273) 28 63
"builtin function" (274) 26 60
"number" (275) 39 58
"integer" (276) 41 46 47 48 59 77 108 109 112 113
">=" (277) 89
">" (278) 88
"<" (279) 90
"<=" (280) 91
".eq." (281) 93
"^=" (282)
"^ or .not." (283) 97
"& or .and." (284) 95
"| or .or." (285) 96
T_NE (286) 94
UNARYMINUS (287)
T_POW (288) 84


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
model (48)
    on left: 1, on right: 0
opt_end (49)
    on left: 2 3, on right: 1
stmtlist (50)
    on left: 4 5, on right: 1 5
stmt (51)
    on left: 6 7 8 9 10 11 12 13 14, on right: 4 5
eqtyp (52)
    on left: 15 16 17, on right: 9 10 11 12
eqtyp_error (53)
    on left: 18 19 20 21, on right: 17
eqname (54)
    on left: 22 23 24 25, on right: 11 12
keywd (55)
    on left: 26 27 28 29 30 31 32, on right: 19 23 45
plist (56)
    on left: 33 34, on right: 8 34
pnlist (57)
    on left: 35, on right: 33 34
pname (58)
    on left: 36, on right: 35
nlist (59)
    on left: 37 38, on right: 35 38
snumber (60)
    on left: 39 40, on right: 37 38
sinteger (61)
    on left: 41, on right: 40 78 106 110
lhsexpl (62)
    on left: 42 43 44 45, on right: 9 11
lhsimpl (63)
    on left: 46 47 48, on right: 10 12
funcname (64)
    on left: 49 50 51, on right: 53 55
fstmt (65)
    on left: 53, on right: 6
$@1 (66)
    on left: 52, on right: 53
ulfstmt (67)
    on left: 55, on right: 7
$@2 (68)
    on left: 54, on right: 55
formals (69)
    on left: 56 57, on right: 53 55 57
sexpr (70)
    on left: 58 59 60 61 62 63 64 65 66 67, on right: 68 103
expr (71)
    on left: 68 69, on right: 9 10 11 12 53 63 64 70 73 74 79 80 81
    82 83 84 85 86 88 89 90 91 92 93 94 95 96 97 98 99 100
ifexpr (72)
    on left: 70, on right: 65 66
ifpart1 (73)
    on left: 71 72, on right: 70
ifthen (74)
    on left: 73, on right: 71 72
elseif (75)
    on left: 74, on right: 75 76
elseifl (76)
    on left: 75 76, on right: 72 76
delarg (77)
    on left: 77, on right: 63
sumarg (78)
    on left: 78, on right: 64
rexpr (79)
    on left: 79 80 81 82 83 84 85 86 87, on right: 67
lexpr (80)
    on left: 88 89 90 91 92 93 94 95 96 97 98, on right: 87
fargs (81)
    on left: 99 100, on right: 60 100
ufargs (82)
    on left: 101 102, on right: 61 62 102
ufarg (83)
    on left: 103 104, on right: 101 102
var (84)
    on left: 105 106 107 108 109 110 111 112 113, on right: 69 104
opt_sign (85)
    on left: 114 115 116, on right: 39 41


state 0

    0 $accept: . model $end

    error                     shift, and go to state 1
    "function"                shift, and go to state 2
    "ul function"             shift, and go to state 3
    "frml"                    shift, and go to state 4
    "ident"                   shift, and go to state 5
    "param"                   shift, and go to state 6
    "name"                    shift, and go to state 7
    "user function"           shift, and go to state 8
    "user language function"  shift, and go to state 9
    "if"                      shift, and go to state 10
    "then"                    shift, and go to state 11
    "else"                    shift, and go to state 12
    "elseif"                  shift, and go to state 13
    "sum"                     shift, and go to state 14
    "del"                     shift, and go to state 15
    "builtin function"        shift, and go to state 16
    ';'                       shift, and go to state 17

    model        go to state 18
    stmtlist     go to state 19
    stmt         go to state 20
    eqtyp        go to state 21
    eqtyp_error  go to state 22
    keywd        go to state 23


state 1

   14 stmt: error . ';'

    ';'  shift, and go to state 24


state 2

    6 stmt: "function" . fstmt

    "name"                    shift, and go to state 25
    "user function"           shift, and go to state 26
    "user language function"  shift, and go to state 27

    funcname  go to state 28
    fstmt     go to state 29


state 3

    7 stmt: "ul function" . ulfstmt

    "name"                    shift, and go to state 25
    "user function"           shift, and go to state 26
    "user language function"  shift, and go to state 27

    funcname  go to state 30
    ulfstmt   go to state 31


state 4

   15 eqtyp: "frml" .

    $default  reduce using rule 15 (eqtyp)


state 5

   16 eqtyp: "ident" .

    $default  reduce using rule 16 (eqtyp)


state 6

    8 stmt: "param" . plist ';'

    "name"  shift, and go to state 32

    plist   go to state 33
    pnlist  go to state 34
    pname   go to state 35


state 7

   18 eqtyp_error: "name" .

    $default  reduce using rule 18 (eqtyp_error)


state 8

   20 eqtyp_error: "user function" .

    $default  reduce using rule 20 (eqtyp_error)


state 9

   21 eqtyp_error: "user language function" .

    $default  reduce using rule 21 (eqtyp_error)


state 10

   29 keywd: "if" .

    $default  reduce using rule 29 (keywd)


state 11

   32 keywd: "then" .

    $default  reduce using rule 32 (keywd)


state 12

   30 keywd: "else" .

    $default  reduce using rule 30 (keywd)


state 13

   31 keywd: "elseif" .

    $default  reduce using rule 31 (keywd)


state 14

   27 keywd: "sum" .

    $default  reduce using rule 27 (keywd)


state 15

   28 keywd: "del" .

    $default  reduce using rule 28 (keywd)


state 16

   26 keywd: "builtin function" .

    $default  reduce using rule 26 (keywd)


state 17

   13 stmt: ';' .

    $default  reduce using rule 13 (stmt)


state 18

    0 $accept: model . $end

    $end  shift, and go to state 36


state 19

    1 model: stmtlist . opt_end
    5 stmtlist: stmtlist . stmt

    error                     shift, and go to state 1
    "end"                     shift, and go to state 37
    "function"                shift, and go to state 2
    "ul function"             shift, and go to state 3
    "frml"                    shift, and go to state 4
    "ident"                   shift, and go to state 5
    "param"                   shift, and go to state 6
    "name"                    shift, and go to state 7
    "user function"           shift, and go to state 8
    "user language function"  shift, and go to state 9
    "if"                      shift, and go to state 10
    "then"                    shift, and go to state 11
    "else"                    shift, and go to state 12
    "elseif"                  shift, and go to state 13
    "sum"                     shift, and go to state 14
    "del"                     shift, and go to state 15
    "builtin function"        shift, and go to state 16
    ';'                       shift, and go to state 17

    $end  reduce using rule 2 (opt_end)

    opt_end      go to state 38
    stmt         go to state 39
    eqtyp        go to state 21
    eqtyp_error  go to state 22
    keywd        go to state 23


state 20

    4 stmtlist: stmt .

    $default  reduce using rule 4 (stmtlist)


state 21

    9 stmt: eqtyp . lhsexpl '=' expr ';'
   10     | eqtyp . lhsimpl '=' expr ';'
   11     | eqtyp . eqname lhsexpl '=' expr ';'
   12     | eqtyp . eqname lhsimpl '=' expr ';'

    "name"                    shift, and go to state 40
    "user function"           shift, and go to state 41
    "user language function"  shift, and go to state 42
    "if"                      shift, and go to state 10
    "then"                    shift, and go to state 11
    "else"                    shift, and go to state 12
    "elseif"                  shift, and go to state 13
    "sum"                     shift, and go to state 14
    "del"                     shift, and go to state 15
    "builtin function"        shift, and go to state 16
    "integer"                 shift, and go to state 43

    eqname   go to state 44
    keywd    go to state 45
    lhsexpl  go to state 46
    lhsimpl  go to state 47


state 22

   17 eqtyp: eqtyp_error .

    $default  reduce using rule 17 (eqtyp)


state 23

   19 eqtyp_error: keywd .

    $default  reduce using rule 19 (eqtyp_error)


state 24

   14 stmt: error ';' .

    $default  reduce using rule 14 (stmt)


state 25

   49 funcname: "name" .

    $default  reduce using rule 49 (funcname)


state 26

   50 funcname: "user function" .

    $default  reduce using rule 50 (funcname)


state 27

   51 funcname: "user language function" .

    $default  reduce using rule 51 (funcname)


state 28

   53 fstmt: funcname . $@1 '(' formals ')' '=' expr

    $default  reduce using rule 52 ($@1)

    $@1  go to state 48


state 29

    6 stmt: "function" fstmt .

    $default  reduce using rule 6 (stmt)


state 30

   55 ulfstmt: funcname . $@2 '(' formals ')'

    $default  reduce using rule 54 ($@2)

    $@2  go to state 49


state 31

    7 stmt: "ul function" ulfstmt .

    $default  reduce using rule 7 (stmt)


state 32

   36 pname: "name" .

    $default  reduce using rule 36 (pname)


state 33

    8 stmt: "param" plist . ';'
   34 plist: plist . pnlist

    "name"  shift, and go to state 32
    ';'     shift, and go to state 50

    pnlist  go to state 51
    pname   go to state 35


state 34

   33 plist: pnlist .

    $default  reduce using rule 33 (plist)


state 35

   35 pnlist: pname . nlist

    '-'  shift, and go to state 52
    '+'  shift, and go to state 53

    $default  reduce using rule 114 (opt_sign)

    nlist     go to state 54
    snumber   go to state 55
    sinteger  go to state 56
    opt_sign  go to state 57


state 36

    0 $accept: model $end .

    $default  accept


state 37

    3 opt_end: "end" . ';'

    ';'  shift, and go to state 58


state 38

    1 model: stmtlist opt_end .

    $default  reduce using rule 1 (model)


state 39

    5 stmtlist: stmtlist stmt .

    $default  reduce using rule 5 (stmtlist)


state 40

   22 eqname: "name" .
   42 lhsexpl: "name" .

    '='       reduce using rule 42 (lhsexpl)
    $default  reduce using rule 22 (eqname)


state 41

   24 eqname: "user function" .
   43 lhsexpl: "user function" .

    '='       reduce using rule 43 (lhsexpl)
    $default  reduce using rule 24 (eqname)


state 42

   25 eqname: "user language function" .
   44 lhsexpl: "user language function" .

    '='       reduce using rule 44 (lhsexpl)
    $default  reduce using rule 25 (eqname)


state 43

   46 lhsimpl: "integer" . '(' "name" ')'
   47        | "integer" . '(' "user function" ')'
   48        | "integer" . '(' "user language function" ')'

    '('  shift, and go to state 59


state 44

   11 stmt: eqtyp eqname . lhsexpl '=' expr ';'
   12     | eqtyp eqname . lhsimpl '=' expr ';'

    "name"                    shift, and go to state 60
    "user function"           shift, and go to state 61
    "user language function"  shift, and go to state 62
    "if"                      shift, and go to state 10
    "then"                    shift, and go to state 11
    "else"                    shift, and go to state 12
    "elseif"                  shift, and go to state 13
    "sum"                     shift, and go to state 14
    "del"                     shift, and go to state 15
    "builtin function"        shift, and go to state 16
    "integer"                 shift, and go to state 43

    keywd    go to state 63
    lhsexpl  go to state 64
    lhsimpl  go to state 65


state 45

   23 eqname: keywd .
   45 lhsexpl: keywd .

    '='       reduce using rule 45 (lhsexpl)
    $default  reduce using rule 23 (eqname)


state 46

    9 stmt: eqtyp lhsexpl . '=' expr ';'

    '='  shift, and go to state 66


state 47

   10 stmt: eqtyp lhsimpl . '=' expr ';'

    '='  shift, and go to state 67


state 48

   53 fstmt: funcname $@1 . '(' formals ')' '=' expr

    '('  shift, and go to state 68


state 49

   55 ulfstmt: funcname $@2 . '(' formals ')'

    '('  shift, and go to state 69


state 50

    8 stmt: "param" plist ';' .

    $default  reduce using rule 8 (stmt)


state 51

   34 plist: plist pnlist .

    $default  reduce using rule 34 (plist)


state 52

  115 opt_sign: '-' .

    $default  reduce using rule 115 (opt_sign)


state 53

  116 opt_sign: '+' .

    $default  reduce using rule 116 (opt_sign)


state 54

   35 pnlist: pname nlist .
   38 nlist: nlist . snumber

    '-'  shift, and go to state 52
    '+'  shift, and go to state 53

    "number"   reduce using rule 114 (opt_sign)
    "integer"  reduce using rule 114 (opt_sign)
    $default   reduce using rule 35 (pnlist)

    snumber   go to state 70
    sinteger  go to state 56
    opt_sign  go to state 57


state 55

   37 nlist: snumber .

    $default  reduce using rule 37 (nlist)


state 56

   40 snumber: sinteger .

    $default  reduce using rule 40 (snumber)


state 57

   39 snumber: opt_sign . "number"
   41 sinteger: opt_sign . "integer"

    "number"   shift, and go to state 71
    "integer"  shift, and go to state 72


state 58

    3 opt_end: "end" ';' .

    $default  reduce using rule 3 (opt_end)


state 59

   46 lhsimpl: "integer" '(' . "name" ')'
   47        | "integer" '(' . "user function" ')'
   48        | "integer" '(' . "user language function" ')'

    "name"                    shift, and go to state 73
    "user function"           shift, and go to state 74
    "user language function"  shift, and go to state 75


state 60

   42 lhsexpl: "name" .

    $default  reduce using rule 42 (lhsexpl)


state 61

   43 lhsexpl: "user function" .

    $default  reduce using rule 43 (lhsexpl)


state 62

   44 lhsexpl: "user language function" .

    $default  reduce using rule 44 (lhsexpl)


state 63

   45 lhsexpl: keywd .

    $default  reduce using rule 45 (lhsexpl)


state 64

   11 stmt: eqtyp eqname lhsexpl . '=' expr ';'

    '='  shift, and go to state 76


state 65

   12 stmt: eqtyp eqname lhsimpl . '=' expr ';'

    '='  shift, and go to state 77


state 66

    9 stmt: eqtyp lhsexpl '=' . expr ';'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 93
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 67

   10 stmt: eqtyp lhsimpl '=' . expr ';'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 100
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 68

   53 fstmt: funcname $@1 '(' . formals ')' '=' expr

    "name"  shift, and go to state 101

    formals  go to state 102


state 69

   55 ulfstmt: funcname $@2 '(' . formals ')'

    "name"  shift, and go to state 101

    formals  go to state 103


state 70

   38 nlist: nlist snumber .

    $default  reduce using rule 38 (nlist)


state 71

   39 snumber: opt_sign "number" .

    $default  reduce using rule 39 (snumber)


state 72

   41 sinteger: opt_sign "integer" .

    $default  reduce using rule 41 (sinteger)


state 73

   46 lhsimpl: "integer" '(' "name" . ')'

    ')'  shift, and go to state 104


state 74

   47 lhsimpl: "integer" '(' "user function" . ')'

    ')'  shift, and go to state 105


state 75

   48 lhsimpl: "integer" '(' "user language function" . ')'

    ')'  shift, and go to state 106


state 76

   11 stmt: eqtyp eqname lhsexpl '=' . expr ';'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 107
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 77

   12 stmt: eqtyp eqname lhsimpl '=' . expr ';'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 108
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 78

   85 rexpr: '-' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 109
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 79

   86 rexpr: '+' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 110
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 80

  105 var: "name" .
  106    | "name" . '[' sinteger ']'
  107    | "name" . '[' "name" ']'
  108    | "name" . '[' "name" '-' "integer" ']'
  109    | "name" . '[' "name" '+' "integer" ']'
  110    | "name" . '(' sinteger ')'
  111    | "name" . '(' "name" ')'
  112    | "name" . '(' "name" '-' "integer" ')'
  113    | "name" . '(' "name" '+' "integer" ')'

    '('  shift, and go to state 111
    '['  shift, and go to state 112

    $default  reduce using rule 105 (var)


state 81

   61 sexpr: "user function" . '(' ufargs ')'

    '('  shift, and go to state 113


state 82

   62 sexpr: "user language function" . '(' ufargs ')'

    '('  shift, and go to state 114


state 83

   73 ifthen: "if" . expr "then" expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 115
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 84

   64 sexpr: "sum" . '(' sumarg ':' expr ')'

    '('  shift, and go to state 116


state 85

   63 sexpr: "del" . '(' delarg ':' expr ')'

    '('  shift, and go to state 117


state 86

   60 sexpr: "builtin function" . '(' fargs ')'

    '('  shift, and go to state 118


state 87

   58 sexpr: "number" .

    $default  reduce using rule 58 (sexpr)


state 88

   59 sexpr: "integer" .

    $default  reduce using rule 59 (sexpr)


state 89

   97 lexpr: "^ or .not." . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 119
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 90

   98 lexpr: '^' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 120
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 91

   79 rexpr: '(' . expr ')'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 121
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 92

   68 expr: sexpr .

    $default  reduce using rule 68 (expr)


state 93

    9 stmt: eqtyp lhsexpl '=' expr . ';'
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135
    ';'           shift, and go to state 136


state 94

   65 sexpr: ifexpr .
   66      | ifexpr . "endif"

    "endif"  shift, and go to state 137

    "endif"   [reduce using rule 65 (sexpr)]
    $default  reduce using rule 65 (sexpr)


state 95

   70 ifexpr: ifpart1 . "else" expr

    "else"  shift, and go to state 138


state 96

   71 ifpart1: ifthen .
   72        | ifthen . elseifl

    "elseif"  shift, and go to state 139

    $default  reduce using rule 71 (ifpart1)

    elseif   go to state 140
    elseifl  go to state 141


state 97

   67 sexpr: rexpr .

    $default  reduce using rule 67 (sexpr)


state 98

   87 rexpr: lexpr .

    $default  reduce using rule 87 (rexpr)


state 99

   69 expr: var .

    $default  reduce using rule 69 (expr)


state 100

   10 stmt: eqtyp lhsimpl '=' expr . ';'
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135
    ';'           shift, and go to state 142


state 101

   56 formals: "name" .

    $default  reduce using rule 56 (formals)


state 102

   53 fstmt: funcname $@1 '(' formals . ')' '=' expr
   57 formals: formals . ',' "name"

    ')'  shift, and go to state 143
    ','  shift, and go to state 144


state 103

   55 ulfstmt: funcname $@2 '(' formals . ')'
   57 formals: formals . ',' "name"

    ')'  shift, and go to state 145
    ','  shift, and go to state 144


state 104

   46 lhsimpl: "integer" '(' "name" ')' .

    $default  reduce using rule 46 (lhsimpl)


state 105

   47 lhsimpl: "integer" '(' "user function" ')' .

    $default  reduce using rule 47 (lhsimpl)


state 106

   48 lhsimpl: "integer" '(' "user language function" ')' .

    $default  reduce using rule 48 (lhsimpl)


state 107

   11 stmt: eqtyp eqname lhsexpl '=' expr . ';'
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135
    ';'           shift, and go to state 146


state 108

   12 stmt: eqtyp eqname lhsimpl '=' expr . ';'
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135
    ';'           shift, and go to state 147


state 109

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   85      | '-' expr .
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    T_POW  shift, and go to state 135

    $default  reduce using rule 85 (rexpr)


state 110

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   86      | '+' expr .
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    T_POW  shift, and go to state 135

    $default  reduce using rule 86 (rexpr)


state 111

  110 var: "name" '(' . sinteger ')'
  111    | "name" '(' . "name" ')'
  112    | "name" '(' . "name" '-' "integer" ')'
  113    | "name" '(' . "name" '+' "integer" ')'

    '-'     shift, and go to state 52
    '+'     shift, and go to state 53
    "name"  shift, and go to state 148

    $default  reduce using rule 114 (opt_sign)

    sinteger  go to state 149
    opt_sign  go to state 150


state 112

  106 var: "name" '[' . sinteger ']'
  107    | "name" '[' . "name" ']'
  108    | "name" '[' . "name" '-' "integer" ']'
  109    | "name" '[' . "name" '+' "integer" ']'

    '-'     shift, and go to state 52
    '+'     shift, and go to state 53
    "name"  shift, and go to state 151

    $default  reduce using rule 114 (opt_sign)

    sinteger  go to state 152
    opt_sign  go to state 150


state 113

   61 sexpr: "user function" '(' . ufargs ')'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 153
    expr     go to state 154
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    ufargs   go to state 155
    ufarg    go to state 156
    var      go to state 157


state 114

   62 sexpr: "user language function" '(' . ufargs ')'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 153
    expr     go to state 154
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    ufargs   go to state 158
    ufarg    go to state 156
    var      go to state 157


state 115

   73 ifthen: "if" expr . "then" expr
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    "then"        shift, and go to state 159
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135


state 116

   64 sexpr: "sum" '(' . sumarg ':' expr ')'

    "name"  shift, and go to state 160

    sumarg  go to state 161


state 117

   63 sexpr: "del" '(' . delarg ':' expr ')'

    "integer"  shift, and go to state 162

    delarg  go to state 163


state 118

   60 sexpr: "builtin function" '(' . fargs ')'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 164
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    fargs    go to state 165
    var      go to state 99


state 119

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr
   97      | "^ or .not." expr .

    '-'     shift, and go to state 122
    '+'     shift, and go to state 123
    ">="    shift, and go to state 124
    ">"     shift, and go to state 125
    "<"     shift, and go to state 126
    "<="    shift, and go to state 127
    ".eq."  shift, and go to state 128
    '='     shift, and go to state 131
    T_NE    shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    T_POW   shift, and go to state 135

    $default  reduce using rule 97 (lexpr)


state 120

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr
   98      | '^' expr .

    '-'     shift, and go to state 122
    '+'     shift, and go to state 123
    ">="    shift, and go to state 124
    ">"     shift, and go to state 125
    "<"     shift, and go to state 126
    "<="    shift, and go to state 127
    ".eq."  shift, and go to state 128
    '='     shift, and go to state 131
    T_NE    shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    T_POW   shift, and go to state 135

    $default  reduce using rule 98 (lexpr)


state 121

   79 rexpr: '(' expr . ')'
   80      | expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135
    ')'           shift, and go to state 166


state 122

   81 rexpr: expr '-' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 167
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 123

   80 rexpr: expr '+' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 168
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 124

   89 lexpr: expr ">=" . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 169
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 125

   88 lexpr: expr ">" . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 170
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 126

   90 lexpr: expr "<" . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 171
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 127

   91 lexpr: expr "<=" . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 172
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 128

   93 lexpr: expr ".eq." . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 173
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 129

   95 lexpr: expr "& or .and." . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 174
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 130

   96 lexpr: expr "| or .or." . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 175
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 131

   92 lexpr: expr '=' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 176
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 132

   94 lexpr: expr T_NE . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 177
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 133

   82 rexpr: expr '*' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 178
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 134

   83 rexpr: expr '/' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 179
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 135

   84 rexpr: expr T_POW . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 180
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 136

    9 stmt: eqtyp lhsexpl '=' expr ';' .

    $default  reduce using rule 9 (stmt)


state 137

   66 sexpr: ifexpr "endif" .

    $default  reduce using rule 66 (sexpr)


state 138

   70 ifexpr: ifpart1 "else" . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 181
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 139

   74 elseif: "elseif" . expr "then" expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 182
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 140

   75 elseifl: elseif .

    $default  reduce using rule 75 (elseifl)


state 141

   72 ifpart1: ifthen elseifl .
   76 elseifl: elseifl . elseif

    "elseif"  shift, and go to state 139

    $default  reduce using rule 72 (ifpart1)

    elseif  go to state 183


state 142

   10 stmt: eqtyp lhsimpl '=' expr ';' .

    $default  reduce using rule 10 (stmt)


state 143

   53 fstmt: funcname $@1 '(' formals ')' . '=' expr

    '='  shift, and go to state 184


state 144

   57 formals: formals ',' . "name"

    "name"  shift, and go to state 185


state 145

   55 ulfstmt: funcname $@2 '(' formals ')' .

    $default  reduce using rule 55 (ulfstmt)


state 146

   11 stmt: eqtyp eqname lhsexpl '=' expr ';' .

    $default  reduce using rule 11 (stmt)


state 147

   12 stmt: eqtyp eqname lhsimpl '=' expr ';' .

    $default  reduce using rule 12 (stmt)


state 148

  111 var: "name" '(' "name" . ')'
  112    | "name" '(' "name" . '-' "integer" ')'
  113    | "name" '(' "name" . '+' "integer" ')'

    '-'  shift, and go to state 186
    '+'  shift, and go to state 187
    ')'  shift, and go to state 188


state 149

  110 var: "name" '(' sinteger . ')'

    ')'  shift, and go to state 189


state 150

   41 sinteger: opt_sign . "integer"

    "integer"  shift, and go to state 72


state 151

  107 var: "name" '[' "name" . ']'
  108    | "name" '[' "name" . '-' "integer" ']'
  109    | "name" '[' "name" . '+' "integer" ']'

    '-'  shift, and go to state 190
    '+'  shift, and go to state 191
    ']'  shift, and go to state 192


state 152

  106 var: "name" '[' sinteger . ']'

    ']'  shift, and go to state 193


state 153

   68 expr: sexpr .
  103 ufarg: sexpr .

    ')'       reduce using rule 103 (ufarg)
    ','       reduce using rule 103 (ufarg)
    $default  reduce using rule 68 (expr)


state 154

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135


state 155

   61 sexpr: "user function" '(' ufargs . ')'
  102 ufargs: ufargs . ',' ufarg

    ')'  shift, and go to state 194
    ','  shift, and go to state 195


state 156

  101 ufargs: ufarg .

    $default  reduce using rule 101 (ufargs)


state 157

   69 expr: var .
  104 ufarg: var .

    ')'       reduce using rule 104 (ufarg)
    ','       reduce using rule 104 (ufarg)
    $default  reduce using rule 69 (expr)


state 158

   62 sexpr: "user language function" '(' ufargs . ')'
  102 ufargs: ufargs . ',' ufarg

    ')'  shift, and go to state 196
    ','  shift, and go to state 195


state 159

   73 ifthen: "if" expr "then" . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 197
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 160

   78 sumarg: "name" . '=' sinteger ',' sinteger

    '='  shift, and go to state 198


state 161

   64 sexpr: "sum" '(' sumarg . ':' expr ')'

    ':'  shift, and go to state 199


state 162

   77 delarg: "integer" .

    $default  reduce using rule 77 (delarg)


state 163

   63 sexpr: "del" '(' delarg . ':' expr ')'

    ':'  shift, and go to state 200


state 164

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr
   99 fargs: expr .

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135

    $default  reduce using rule 99 (fargs)


state 165

   60 sexpr: "builtin function" '(' fargs . ')'
  100 fargs: fargs . ',' expr

    ')'  shift, and go to state 201
    ','  shift, and go to state 202


state 166

   79 rexpr: '(' expr ')' .

    $default  reduce using rule 79 (rexpr)


state 167

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   81      | expr '-' expr .
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 81 (rexpr)


state 168

   80 rexpr: expr . '+' expr
   80      | expr '+' expr .
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 80 (rexpr)


state 169

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   89      | expr ">=" expr .
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'    shift, and go to state 122
    '+'    shift, and go to state 123
    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 89 (lexpr)


state 170

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   88      | expr ">" expr .
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'    shift, and go to state 122
    '+'    shift, and go to state 123
    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 88 (lexpr)


state 171

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   90      | expr "<" expr .
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'    shift, and go to state 122
    '+'    shift, and go to state 123
    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 90 (lexpr)


state 172

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   91      | expr "<=" expr .
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'    shift, and go to state 122
    '+'    shift, and go to state 123
    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 91 (lexpr)


state 173

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   93      | expr ".eq." expr .
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'    shift, and go to state 122
    '+'    shift, and go to state 123
    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 93 (lexpr)


state 174

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   95      | expr "& or .and." expr .
   96      | expr . "| or .or." expr

    '-'     shift, and go to state 122
    '+'     shift, and go to state 123
    ">="    shift, and go to state 124
    ">"     shift, and go to state 125
    "<"     shift, and go to state 126
    "<="    shift, and go to state 127
    ".eq."  shift, and go to state 128
    '='     shift, and go to state 131
    T_NE    shift, and go to state 132
    '*'     shift, and go to state 133
    '/'     shift, and go to state 134
    T_POW   shift, and go to state 135

    $default  reduce using rule 95 (lexpr)


state 175

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr
   96      | expr "| or .or." expr .

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135

    $default  reduce using rule 96 (lexpr)


state 176

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   92      | expr '=' expr .
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'    shift, and go to state 122
    '+'    shift, and go to state 123
    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 92 (lexpr)


state 177

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   94      | expr T_NE expr .
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'    shift, and go to state 122
    '+'    shift, and go to state 123
    '*'    shift, and go to state 133
    '/'    shift, and go to state 134
    T_POW  shift, and go to state 135

    $default  reduce using rule 94 (lexpr)


state 178

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   82      | expr '*' expr .
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    T_POW  shift, and go to state 135

    $default  reduce using rule 82 (rexpr)


state 179

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   83      | expr '/' expr .
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    T_POW  shift, and go to state 135

    $default  reduce using rule 83 (rexpr)


state 180

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   84      | expr T_POW expr .
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    T_POW  shift, and go to state 135

    $default  reduce using rule 84 (rexpr)


state 181

   70 ifexpr: ifpart1 "else" expr .
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135

    $default  reduce using rule 70 (ifexpr)


state 182

   74 elseif: "elseif" expr . "then" expr
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    "then"        shift, and go to state 203
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135


state 183

   76 elseifl: elseifl elseif .

    $default  reduce using rule 76 (elseifl)


state 184

   53 fstmt: funcname $@1 '(' formals ')' '=' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 204
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 185

   57 formals: formals ',' "name" .

    $default  reduce using rule 57 (formals)


state 186

  112 var: "name" '(' "name" '-' . "integer" ')'

    "integer"  shift, and go to state 205


state 187

  113 var: "name" '(' "name" '+' . "integer" ')'

    "integer"  shift, and go to state 206


state 188

  111 var: "name" '(' "name" ')' .

    $default  reduce using rule 111 (var)


state 189

  110 var: "name" '(' sinteger ')' .

    $default  reduce using rule 110 (var)


state 190

  108 var: "name" '[' "name" '-' . "integer" ']'

    "integer"  shift, and go to state 207


state 191

  109 var: "name" '[' "name" '+' . "integer" ']'

    "integer"  shift, and go to state 208


state 192

  107 var: "name" '[' "name" ']' .

    $default  reduce using rule 107 (var)


state 193

  106 var: "name" '[' sinteger ']' .

    $default  reduce using rule 106 (var)


state 194

   61 sexpr: "user function" '(' ufargs ')' .

    $default  reduce using rule 61 (sexpr)


state 195

  102 ufargs: ufargs ',' . ufarg

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 153
    expr     go to state 154
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    ufarg    go to state 209
    var      go to state 157


state 196

   62 sexpr: "user language function" '(' ufargs ')' .

    $default  reduce using rule 62 (sexpr)


state 197

   73 ifthen: "if" expr "then" expr .
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135

    $default  reduce using rule 73 (ifthen)


state 198

   78 sumarg: "name" '=' . sinteger ',' sinteger

    '-'  shift, and go to state 52
    '+'  shift, and go to state 53

    $default  reduce using rule 114 (opt_sign)

    sinteger  go to state 210
    opt_sign  go to state 150


state 199

   64 sexpr: "sum" '(' sumarg ':' . expr ')'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 211
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 200

   63 sexpr: "del" '(' delarg ':' . expr ')'

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 212
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 201

   60 sexpr: "builtin function" '(' fargs ')' .

    $default  reduce using rule 60 (sexpr)


state 202

  100 fargs: fargs ',' . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 213
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 203

   74 elseif: "elseif" expr "then" . expr

    '-'                       shift, and go to state 78
    '+'                       shift, and go to state 79
    "name"                    shift, and go to state 80
    "user function"           shift, and go to state 81
    "user language function"  shift, and go to state 82
    "if"                      shift, and go to state 83
    "sum"                     shift, and go to state 84
    "del"                     shift, and go to state 85
    "builtin function"        shift, and go to state 86
    "number"                  shift, and go to state 87
    "integer"                 shift, and go to state 88
    "^ or .not."              shift, and go to state 89
    '^'                       shift, and go to state 90
    '('                       shift, and go to state 91

    sexpr    go to state 92
    expr     go to state 214
    ifexpr   go to state 94
    ifpart1  go to state 95
    ifthen   go to state 96
    rexpr    go to state 97
    lexpr    go to state 98
    var      go to state 99


state 204

   53 fstmt: funcname $@1 '(' formals ')' '=' expr .
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135

    $default  reduce using rule 53 (fstmt)


state 205

  112 var: "name" '(' "name" '-' "integer" . ')'

    ')'  shift, and go to state 215


state 206

  113 var: "name" '(' "name" '+' "integer" . ')'

    ')'  shift, and go to state 216


state 207

  108 var: "name" '[' "name" '-' "integer" . ']'

    ']'  shift, and go to state 217


state 208

  109 var: "name" '[' "name" '+' "integer" . ']'

    ']'  shift, and go to state 218


state 209

  102 ufargs: ufargs ',' ufarg .

    $default  reduce using rule 102 (ufargs)


state 210

   78 sumarg: "name" '=' sinteger . ',' sinteger

    ','  shift, and go to state 219


state 211

   64 sexpr: "sum" '(' sumarg ':' expr . ')'
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135
    ')'           shift, and go to state 220


state 212

   63 sexpr: "del" '(' delarg ':' expr . ')'
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135
    ')'           shift, and go to state 221


state 213

   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr
  100 fargs: fargs ',' expr .

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135

    $default  reduce using rule 100 (fargs)


state 214

   74 elseif: "elseif" expr "then" expr .
   80 rexpr: expr . '+' expr
   81      | expr . '-' expr
   82      | expr . '*' expr
   83      | expr . '/' expr
   84      | expr . T_POW expr
   88 lexpr: expr . ">" expr
   89      | expr . ">=" expr
   90      | expr . "<" expr
   91      | expr . "<=" expr
   92      | expr . '=' expr
   93      | expr . ".eq." expr
   94      | expr . T_NE expr
   95      | expr . "& or .and." expr
   96      | expr . "| or .or." expr

    '-'           shift, and go to state 122
    '+'           shift, and go to state 123
    ">="          shift, and go to state 124
    ">"           shift, and go to state 125
    "<"           shift, and go to state 126
    "<="          shift, and go to state 127
    ".eq."        shift, and go to state 128
    "& or .and."  shift, and go to state 129
    "| or .or."   shift, and go to state 130
    '='           shift, and go to state 131
    T_NE          shift, and go to state 132
    '*'           shift, and go to state 133
    '/'           shift, and go to state 134
    T_POW         shift, and go to state 135

    $default  reduce using rule 74 (elseif)


state 215

  112 var: "name" '(' "name" '-' "integer" ')' .

    $default  reduce using rule 112 (var)


state 216

  113 var: "name" '(' "name" '+' "integer" ')' .

    $default  reduce using rule 113 (var)


state 217

  108 var: "name" '[' "name" '-' "integer" ']' .

    $default  reduce using rule 108 (var)


state 218

  109 var: "name" '[' "name" '+' "integer" ']' .

    $default  reduce using rule 109 (var)


state 219

   78 sumarg: "name" '=' sinteger ',' . sinteger

    '-'  shift, and go to state 52
    '+'  shift, and go to state 53

    $default  reduce using rule 114 (opt_sign)

    sinteger  go to state 222
    opt_sign  go to state 150


state 220

   64 sexpr: "sum" '(' sumarg ':' expr ')' .

    $default  reduce using rule 64 (sexpr)


state 221

   63 sexpr: "del" '(' delarg ':' expr ')' .

    $default  reduce using rule 63 (sexpr)


state 222

   78 sumarg: "name" '=' sinteger ',' sinteger .

    $default  reduce using rule 78 (sumarg)
